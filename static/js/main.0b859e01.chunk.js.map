{"version":3,"sources":["services/newsApi.js","services/cryptoApi.js","components/Loader.jsx","components/News.jsx","images/cryptocurrency.png","components/Navbar.jsx","components/Homepage.jsx","components/LineChart.jsx","components/Exchanges.jsx","components/CryptoDetails.jsx","components/Cryptocurrencies.jsx","App.js","app/store.js","index.js"],"names":["cryptoNewsHeaders","cryptoNewsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptoNews","query","newsCategory","count","url","headers","useGetCryptoNewsQuery","cryptoApiHeaders","createRequest","cryptoApi","getCryptos","getExchanges","getCryptoDetails","coinId","getCryptoHistory","timePeriod","useGetCryptosQuery","useGetExchangesQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","Loader","className","Option","Select","Text","Typography","Title","demoImage","News","simplified","data","useState","setNewsCategory","cryptoNews","value","gutter","span","showSearch","placeholder","optionFilterProp","onChange","filterOption","Input","option","children","toLowerCase","indexOf","coins","map","coin","name","news","i","xs","sm","lg","hoverable","href","target","rel","level","style","maxWidth","maxHeight","src","image","thumbnail","contentUrl","description","substring","provider","alt","moment","datePublished","startOf","fromNow","Navbar","activeMenu","setActiveMenu","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","icon","size","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","Homepage","isFetching","globalStats","stats","title","total","millify","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","history","length","push","price","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","change","options","scales","yAxes","ticks","beginAtZero","Panel","Collapse","Exchanges","exchangesList","exchanges","exchange","showArrow","header","rank","iconUrl","volume","numberOfMarkets","marketShare","id","HTMLReactParser","CryptoDetails","useParams","setTimePeriod","cryptoDetails","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","marketCap","allTimeHigh","TrophyOutlined","genericStats","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","links","link","type","Cryptocurrencies","cryptosList","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","filter","includes","e","currency","extra","App","exact","path","color","textAlign","getFullYear","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.0b859e01.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nconst cryptoNewsHeaders= {\r\n    'x-bingapis-sdk': 'true',\r\n    'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\r\n    'x-rapidapi-key': 'd4b8ae53a3mshf13ca8cc610db23p1288c5jsn16f0d83cc581'\r\n};\r\n\r\nconst baseUrl = 'https://bing-news-search1.p.rapidapi.com';\r\n\r\nconst createRequest = (url) => ({url, headers: cryptoNewsHeaders});\r\n\r\nexport const cryptoNewsApi = createApi({\r\n    reducerPath: 'cryptoNewsApi',\r\n    baseQuery: fetchBaseQuery({ baseUrl}),\r\n    endpoints: (builder) => ({\r\n        getCryptoNews: builder.query({\r\n            query: ({newsCategory, count}) => createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`),\r\n        })\r\n    })\r\n});\r\n\r\nexport const {useGetCryptoNewsQuery} = cryptoNewsApi;","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nconst cryptoApiHeaders = {\r\n    'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\r\n    'x-rapidapi-key': 'd4b8ae53a3mshf13ca8cc610db23p1288c5jsn16f0d83cc581'\r\n};\r\n\r\nconst baseUrl = 'https://coinranking1.p.rapidapi.com';\r\n\r\nconst createRequest = (url) => ({url, headers: cryptoApiHeaders});\r\n\r\nexport  const cryptoApi =  createApi({\r\n     reducerPath: 'cryptoApi',\r\n    baseQuery: fetchBaseQuery({ baseUrl}),\r\n    endpoints: (builder) => ({\r\n        getCryptos: builder.query({\r\n            query: (count) =>  createRequest(`/coins?limit=${count}`),\r\n        }),\r\n        getExchanges: builder.query({\r\n            query: () =>  createRequest(`/exchanges`),\r\n        }),\r\n        getCryptoDetails: builder.query({\r\n            query: (coinId) => createRequest(`/coin/${coinId}`)\r\n        }),\r\n        getCryptoHistory: builder.query({\r\n            query: ({coinId, timePeriod}) => createRequest(`/coin/${coinId}/history/${timePeriod}`)\r\n        })\r\n    })\r\n});\r\n\r\nexport const {useGetCryptosQuery, useGetExchangesQuery, useGetCryptoDetailsQuery, useGetCryptoHistoryQuery} = cryptoApi;","import React from 'react';\r\nimport {Spin} from 'antd';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"loader\">\r\n            <Spin />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;","/* eslint-disable jsx-a11y/alt-text */\r\nimport React, { useState } from 'react';\r\nimport { Select, Row, Col, Typography, Avatar, Card, Input } from 'antd';\r\nimport moment from 'moment';\r\n\r\nimport { useGetCryptoNewsQuery } from '../services/newsApi';\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\nimport Loader from './Loader';\r\n\r\nconst { Option } = Select;\r\nconst { Text, Title } = Typography;\r\nconst demoImage = 'https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News';\r\n\r\nconst News = ({ simplified }) => {\r\n    const { data, } = useGetCryptosQuery(100);\r\n    const [newsCategory, setNewsCategory] = useState('cryptocurrency');\r\n    const { data: cryptoNews } = useGetCryptoNewsQuery({ newsCategory, count: simplified ? 6 : 12 });\r\n\r\n    if (!cryptoNews?.value) return <Loader />;\r\n\r\n    return (\r\n        <Row gutter={[24, 24]}>\r\n\r\n            {!simplified && (\r\n                <Col span={24}>\r\n                    <Select\r\n                        showSearch\r\n                        className=\"select-news\"\r\n                        placeholder=\"Select a Crypto Coin\"\r\n                        optionFilterProp=\"children\"\r\n                        onChange={(value) => setNewsCategory(value)}\r\n                        filterOption={(Input, option => option.children.toLowerCase().indexOf(Input.toLowerCase()) >= 0)}\r\n                    >\r\n                        <Option value=\"Cryptocurrency\">Cryptocurrency</Option>\r\n                        {data?.data?.coins.map((coin) => <Option value={coin.name}>\r\n                            {coin.name}</Option>)}\r\n                    </Select>\r\n                </Col>\r\n            )}\r\n            {cryptoNews.value.map((news, i) => (\r\n                <Col xs={24} sm={12} lg={8} key={i}>\r\n                    <Card hoverable className=\"news-card\">\r\n                        <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\r\n                            <div className=\"news-image-container\">\r\n                                <Title className=\"news-title\" level={4}>{news.name}</Title>\r\n                                <img style={{ maxWidth: '200px', maxHeight: '100px' }}\r\n                                    src={news?.image?.thumbnail?.contentUrl || demoImage} />\r\n                            </div>\r\n                            <p>{news.description > 100\r\n                                ? `${news.description.substring(0, 100)}...`\r\n                                : news.description}\r\n                            </p>\r\n                            <div className=\"provider-container\">\r\n                                <div>\r\n                                    <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImage} alt=\"\" />\r\n                                    <Text className=\"provider-name\">{news.provider[0]?.name}</Text>\r\n                                </div>\r\n                                <Text>{moment(news.datePublished).startOf('ss').fromNow()}</Text>\r\n\r\n                            </div>\r\n                        </a>\r\n                    </Card>\r\n                </Col>\r\n            ))}\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default News;","export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Menu, Typography, Avatar } from 'antd';\r\nimport { HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined } from '@ant-design/icons';\r\n\r\nimport icon from '../images/cryptocurrency.png';\r\n\r\nconst Navbar = () => {\r\n    const [activeMenu, setActiveMenu] = useState(true);\r\n    const [screenSize, setScreenSize] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => setScreenSize(window.innerWidth);\r\n        window.addEventListener('resize', handleResize);\r\n        handleResize();\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (screenSize < 768) {\r\n            setActiveMenu(false);\r\n        } else {\r\n            setActiveMenu(true);\r\n        }\r\n    }, [screenSize])\r\n\r\n    return (\r\n        <div className=\"nav-container\">\r\n            <div className=\"logo-container\">\r\n                <Avatar src={icon} size=\"large\" />\r\n                <Typography.Title level={1} className=\"logo\">\r\n                    <Link to=\"/\">CrypTov</Link>\r\n                </Typography.Title>\r\n                <Button className=\"menu-control-container\"\r\n                    onClick={() => setActiveMenu(!activeMenu)}>\r\n                        <MenuOutlined />\r\n                </Button>\r\n            </div>\r\n            {activeMenu && (\r\n                <Menu theme=\"dark\">\r\n                    <Menu.Item icon={<HomeOutlined />} >\r\n                        <Link to=\"/cryptov\">Home</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<FundOutlined />} >\r\n                        <Link to=\"/cryptocurrencies\">Crypto Coins</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<MoneyCollectOutlined />} >\r\n                        <Link to=\"/exchanges\">Exchanges</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<BulbOutlined />} >\r\n                        <Link to=\"/news\">News</Link>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport millify from 'millify';\r\nimport { Link } from 'react-router-dom';\r\nimport { Typography, Row, Col, Statistic } from 'antd';\r\n\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\nimport { Cryptocurrencies, News, Loader} from '../components/index';\r\n\r\nconst { Title } = Typography;\r\n\r\nexport const Homepage = () => {\r\n    const { data, isFetching } = useGetCryptosQuery(10);\r\n    const globalStats = data?.data?.stats;\r\n\r\n    if (isFetching) return <Loader />;\r\n\r\n    return (\r\n        <>\r\n            <Title level={2} className=\"heading\">\r\n                Global Crypto Coins Stats\r\n            </Title>\r\n            <Row>\r\n                <Col span={12}><Statistic\r\n                    title=\"Total Cryptocurrencies\"\r\n                    value={globalStats.total} /></Col>\r\n                <Col span={12}><Statistic\r\n                    title=\"Total Exchanges\"\r\n                    value={millify(globalStats.totalExchanges)} /></Col>\r\n                <Col span={12}><Statistic\r\n                    title=\"Total Market Cap\"\r\n                    value={millify(globalStats.totalMarketCap)} /></Col>\r\n                <Col span={12}><Statistic\r\n                    title=\"Total 24h Volume\"\r\n                    value={millify(globalStats.total24hVolume)} /></Col>\r\n                <Col span={12}><Statistic\r\n                    title=\"Total Markets\"\r\n                    value={millify(globalStats.totalMarkets)} /></Col>\r\n            </Row>\r\n            <div className=\"home-heading-container\">\r\n                <Title level={2} className=\"home-title\">\r\n                    Top 10 Crypto Coins in the World\r\n                </Title>\r\n                <Title level={3} className=\"show-more\">\r\n                    <Link to=\"/cryptocurrencies\">Show more</Link>\r\n                </Title>\r\n            </div>\r\n            <Cryptocurrencies simplified/>\r\n            <div className=\"home-heading-container\">\r\n                <Title level={2} className=\"home-title\">\r\n                    Latest Crypto News\r\n                </Title>\r\n                <Title level={3} className=\"show-more\">\r\n                    <Link to=\"/news\">Show more</Link>\r\n                </Title>\r\n            </div>\r\n            <News simplified/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Homepage;","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Col, Row, Typography} from 'antd';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n\r\n    const coinPrice = [];\r\n    const coinTimestamp = [];\r\n\r\n    for(let i = 0; i < coinHistory?.data?.history?.length; i++) {\r\n        coinPrice.push(coinHistory.data.history[i].price);\r\n        coinTimestamp.push(new Date (coinHistory.data.history[i].timestamp).toLocaleDateString());\r\n    };\r\n\r\n    const data = {\r\n        labels: coinTimestamp,\r\n        datasets: [\r\n            { \r\n                label: 'Price in USD',\r\n                data: coinPrice,\r\n                fill: false,\r\n                backgroundColor: '#0071bd',\r\n                borderColor: '#0071bd'\r\n            }\r\n        ]\r\n    };\r\n\r\n    const options = {\r\n        scales: {\r\n            yAxes : [\r\n                { \r\n                    ticks: {\r\n                        beginAtZero: true\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"chart-header\">\r\n                <Title level={2} className=\"chart-title\">\r\n                    {coinName} Price Chart\r\n                </Title>\r\n                <Col className=\"price-container\">\r\n                    <Title level={5} className=\"price-change\">\r\n                        {coinHistory?.data?.change}%\r\n                    </Title>\r\n                    <Title level={5} className=\"current-price\">\r\n                        Current {coinName} Price: ${currentPrice}\r\n                    </Title>\r\n                </Col>\r\n            </Row>\r\n            <Line data={data} options={options}/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LineChart;","import React from 'react';\r\nimport millify from 'millify';\r\nimport HTMLReactParser from 'html-react-parser';\r\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd';\r\n\r\nimport Loader from './Loader';\r\nimport { useGetExchangesQuery } from '../services/cryptoApi';\r\n\r\nconst { Panel } = Collapse;\r\nconst { Text } = Typography;\r\n\r\nconst Exchanges = () => {\r\n    const { data, isFetching } = useGetExchangesQuery();\r\n    const exchangesList = data?.data?.exchanges;\r\n\r\n    if (isFetching) return <Loader />;\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={6}>Exchanges</Col>\r\n                <Col span={6}>24h Trade Volume</Col>\r\n                <Col span={6}>Markets</Col>\r\n                <Col span={6}>Change</Col>\r\n            </Row>\r\n            <Row>\r\n                {exchangesList.map((exchange) => (\r\n                    <Col span={24}>\r\n                        <Collapse>\r\n                            <Panel\r\n                                key={exchange.id}\r\n                                showArrow={false}\r\n                                header={(\r\n                                    <Row key={exchange.id}>\r\n                                        <Col span={6}>\r\n                                            <Text><strong>{exchange.rank}.</strong></Text>\r\n                                            <Avatar className=\"exchange-image\" src={exchange.iconUrl} />\r\n                                            <Text><strong>{exchange.name}</strong></Text>\r\n                                        </Col>\r\n                                        <Col span={6}>${millify(exchange.volume)}</Col>\r\n                                        <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\r\n                                        <Col span={6}>{millify(exchange.marketShare)}%</Col>\r\n                                    </Row>\r\n                                )}>\r\n                                {HTMLReactParser(exchange.description || '')}\r\n                            </Panel>\r\n                        </Collapse>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Exchanges;","import millify from 'millify';\r\nimport React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport HTMLReactParser from 'html-react-parser';\r\nimport { Col, Row, Typography, Select } from 'antd';\r\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\r\n\r\nimport { LineChart, Loader} from '../components/index';\r\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi';\r\n\r\nconst { Option } = Select;\r\nconst { Title, Text } = Typography;\r\n\r\nconst CryptoDetails = () => {\r\n\r\n    const { coinId } = useParams();\r\n    const [timePeriod, setTimePeriod] = useState('7d');\r\n    const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\r\n    const { data: coinHistory } = useGetCryptoHistoryQuery({coinId, timePeriod});\r\n    const cryptoDetails = data?.data?.coin;\r\n\r\n    if (isFetching) return <Loader />;\r\n\r\n    const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\r\n\r\n    const stats = [\r\n        { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\r\n        { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n        { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\r\n        { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\r\n        { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\r\n    ];\r\n\r\n    const genericStats = [\r\n        { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\r\n        { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\r\n        { title: 'Aprroved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\r\n        { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n        { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n    ];\r\n\r\n    return (\r\n        <Col className=\"coin-detail-container\">\r\n            <Col className=\"coin-heading-container\">\r\n                <Title level={2} className=\"coin-name\">\r\n                    {cryptoDetails.name} ({cryptoDetails.slug}) Price</Title>\r\n                <p>{cryptoDetails.name} live price in US dollars.\r\n                    View value statistics, market cap and supply.</p>\r\n            </Col>\r\n            <Select defaultValue=\"7d\"\r\n                className=\"select-timeperiod\"\r\n                placeholder=\"Select Time Period\"\r\n                onChange={(value) => setTimePeriod(value)}>\r\n                {time.map((date) => <Option key={date}>{date}</Option>)}\r\n            </Select>\r\n            <LineChart coinHistory={coinHistory}\r\n                currentPrice={millify(cryptoDetails.price)}\r\n                coinName={cryptoDetails.name} />\r\n            <Col className=\"stats-container\" >\r\n                <Col className=\"coin-value-statistics\">\r\n                    <Col className=\"coin-value-statistics-heading\">\r\n                        <Title level={3} className=\"coin-details-heading \">\r\n                            {cryptoDetails.name} Value Statistics\r\n                        </Title>\r\n                        <p>\r\n                            An overview showing the stats of {cryptoDetails.name}\r\n                        </p>\r\n                    </Col>\r\n                    {stats.map(({ icon, title, value }) => (\r\n                        <Col className=\"coin-stats\">\r\n                            <Col className=\"coin-stats-name\">\r\n                                <Text>{icon}</Text>\r\n                                <Text>{title}</Text>\r\n                            </Col>\r\n                            <Text className=\"stats\">{value}</Text>\r\n                        </Col>\r\n                    ))}\r\n                </Col>\r\n                <Col className=\"other-stats-info\">\r\n                    <Col className=\"coin-value-statistics-heading\">\r\n                        <Title level={3} className=\"coin-details-heading \">\r\n                            Other Statistics\r\n                        </Title>\r\n                        <p>\r\n                            An overview showing the stats of all cryptocurrencies\r\n                        </p>\r\n                    </Col>\r\n                    {genericStats.map(({ icon, title, value }) => (\r\n                        <Col className=\"coin-stats\">\r\n                            <Col className=\"coin-stats-name\">\r\n                                <Text>{icon}</Text>\r\n                                <Text>{title}</Text>\r\n                            </Col>\r\n                            <Text className=\"stats\">{value}</Text>\r\n                        </Col>\r\n                    ))}\r\n                </Col>\r\n            </Col>\r\n            <Col className=\"coin-desc-link\">\r\n                <Row className=\"coin-desc\">\r\n                    <Title level={3} className=\"coin-details-heading\">\r\n                        What is {cryptoDetails.name}?\r\n                        {HTMLReactParser(cryptoDetails.description)}\r\n                    </Title>\r\n                </Row>\r\n                <Col className=\"coin-links\">\r\n                    <Title level={3} className=\"coin-details-heading\">\r\n                        {cryptoDetails.name} Links\r\n                    </Title>\r\n                    {cryptoDetails.links.map((link) => (\r\n                        <Row className=\"coin-link\" key={link.name}>\r\n                            <Title level={5} className=\"link-name\">\r\n                                {link.type}\r\n                            </Title>\r\n                            <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\r\n                                {link.name}\r\n                            </a>\r\n                        </Row>\r\n                    ))}\r\n                </Col>\r\n            </Col>\r\n        </Col >\r\n    );\r\n};\r\n\r\nexport default CryptoDetails;","import React, { useState, useEffect } from 'react';\r\nimport millify from 'millify';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Row, Col, Input } from 'antd';\r\n\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\nimport Loader from './Loader';\r\n\r\nconst Cryptocurrencies = ({ simplified }) => {\r\n    const count = simplified ? 10 : 100;\r\n    const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\r\n    const [cryptos, setCryptos] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    useEffect(() => {\r\n        const filteredData = cryptosList?.data?.coins.filter((coin) =>\r\n            coin.name.toLowerCase().includes(searchTerm.toLowerCase()));\r\n        setCryptos(filteredData);\r\n    }, [cryptosList, searchTerm])\r\n\r\n    if (isFetching) return <Loader />;\r\n\r\n    return (\r\n        <>\r\n            {!simplified && (\r\n                <div className=\"search-crypto\">\r\n                    <Input placeholder=\"Search Crypto Coin\"\r\n                        onChange={(e) => setSearchTerm(e.target.value)} />\r\n                </div>\r\n            )}\r\n            <Row gutter={[32, 32]} className=\"crypto-card-container\">\r\n                {cryptos?.map((currency) => (\r\n                    <Col xs={24} sm={12} lg={6}\r\n                        className=\"crypto-card\" key={currency.id}>\r\n                        <Link to={`/crypto/${currency.id}`}>\r\n                            <Card title={`${currency.rank} ${currency.name}`}\r\n                                // eslint-disable-next-line jsx-a11y/alt-text\r\n                                extra={<img className=\"crypto-image\" src={currency.iconUrl} />}\r\n                                hoverable>\r\n                                <p>Price: {millify(currency.price)}</p>\r\n                                <p>Market Cap: {millify(currency.marketCap)}</p>\r\n                                <p>Daily Change: {millify(currency.change)}%</p>\r\n                            </Card>\r\n                        </Link>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Cryptocurrencies;","import { Switch, Route, Link } from 'react-router-dom';\nimport { Layout, Typography, Space } from 'antd';\n\nimport './App.css';\nimport { Navbar, Homepage, Exchanges, Cryptocurrencies, CryptoDetails, News } from './components';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n        <div className=\"navbar\">\n            <Navbar />\n        </div>\n        <div className=\"main\">\n            <Layout>\n              <div className=\"routes\">\n                <Switch >\n                  <Route exact path =\"/cryptov\" >\n                    <Homepage />\n                  </Route>\n                  <Route exact path =\"/exchanges\" >\n                    <Exchanges />\n                  </Route>\n                  <Route exact path =\"/cryptocurrencies\" >\n                    <Cryptocurrencies />\n                  </Route>\n                  <Route exact path =\"/crypto/:coinId\" >\n                    <CryptoDetails />\n                  </Route>\n                  <Route exact path =\"/news\" >\n                    <News />\n                  </Route>\n                </Switch>\n              </div>\n            </Layout>\n          <div className=\"footer\">\n            <Typography.Title level ={5} style ={{color: 'white', textAlign: 'center'}}>\n              <a href=\"https://www.linkedin.com/in/arik-alexandrov/\"\n               target=\"_blank\" rel=\"noopener noreferrer\">\n                ©arikxl {new Date().getFullYear()}\n              </a>\n            </Typography.Title>\n            <Space>\n              <Link to=\"/cryptov\">Home</Link>\n              <Link to=\"/exchanges\">Exchanges</Link>\n              <Link to=\"news\">News</Link>\n            </Space>\n          </div>\n        </div>\n    </div>\n  );\n};\n\nexport default App;","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport { cryptoNewsApi } from \"../services/newsApi\";\r\nimport { cryptoApi } from '../services/cryptoApi';\r\n\r\n\r\nexport default configureStore ({\r\n    reducer: {\r\n        [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n        [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\r\n    },\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport 'antd/dist/antd.css';\n\nimport App from './App';\nimport store from './app/store';\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root')\n);"],"sourceRoot":""}